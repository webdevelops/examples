import * as R from 'ramda'

const initialState = { 
  ids: [],
  search: '',
  loading: true 
}

export default (state = initialState, { type, payload }) => {
  switch (type) {
    case 'FETCH_ALL_PHONES_REQUEST':
      return {
        ...state,
        loading: true
      }

    case 'FETCH_ALL_PHONES_SUCCESS':
      return R.merge(state, {
        ids: R.pluck('id', payload),
        loading: false
      })
      // return { ids: payload.map(item => item.id) }

    case 'LOAD_MORE_PHONES_SUCCESS':
      const ids = R.pluck('id', payload)
      // console.log("TCL: payload", payload)
      // console.log("TCL: ids", ids)
      return R.merge(state, 
        { ids: R.concat(state.ids, ids) }
      )
      // const ids = payload.map(item => item.id)
      // return {
      //   ids: ids.concat(ids)
      // }

    case 'SEARCH_PHONE':
      return R.merge(state, {
        search: payload
      })

    default:
      return state
  }
}