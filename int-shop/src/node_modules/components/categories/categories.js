import React from 'react'
import { Link } from 'react-router-dom'
import { connect } from 'react-redux'
import { compose } from 'redux'
import classNames from 'classnames'
import { withRouter } from 'react-router'
import * as R from 'ramda'

import { getCategories, getActiveCategoryId } from 'selectors'

const Categories = ({ categories, activeCategoryId }) => {
  const getActiveState = R.propEq('id', activeCategoryId)

  const renderCategory = (category, index) => {
    const listClass = classNames({
      'list-group-item': true,
      'active': getActiveState(category)
      // 'active': category.id === activeCategoryId
    })

    return (
      <Link
        to={`/categories/${category.id}`}
        className={listClass}
        key={index}
      >
        {category.name}
      </Link>
    )
  }

  const renderAllCategory = () => {
    const listClass = classNames({
      'list-group-item': true,
      'active': R.isNil(activeCategoryId)
      // 'active': activeCategoryId === undefined
    })
    
    return (
      <Link to='/' className={listClass} >
        All
      </Link>
    )
  }

  return (
    <div className='well'>
      <h4>Brand</h4>
      <div className="list-group">
        {renderAllCategory()}
        {categories.map((category, index) => renderCategory(category, index))}
      </div>
    </div>
  )
}

const mapStateToProps = (state, ownProps) => {
  return {
    categories: getCategories(state),
    // categories: Object.keys(state.categories).map(key => state.categories[key]),
    activeCategoryId: getActiveCategoryId(ownProps)
    // activeCategoryId: ownProps.match.params.id
  }
}

export default compose(
  withRouter,
  connect(mapStateToProps, null)
)(Categories)