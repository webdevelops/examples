import * as R from 'ramda'
// import superagent from 'superagent'
// import axios from 'axios'

import mockPhones from './mockPhones'
import mockCategories from './mockCategories'

// const phonesURL = 'http://www.mocky.io/v2/5dd7b0cb310000301e055a15'

// const getData = async url => {
//   return new Promise((resolve, reject) => {
//     const timeout = setTimeout(() => {
//       if (Math.random() > 1) {
//         reject(new Error('Be patient please, we will fix it soon.'))

//       } else {
//         console.log(url)
//         resolve(mockPhones)
//       }

//       clearTimeout(timeout)
//     }, 1000)
//   })
// }

const getData = async url => {
  // const response = await fetch(url)
  // const body = await response.json()
  // const response = await axios(url)
  // const response = await superagent.get(url)

  return new Promise((resolve, reject) => {
    const timeout = setTimeout(() => {
      if (Math.random() > 0) {
        // resolve(body.phones)
        // resolve(response.data.phones)
        // resolve(response.body.phones)
        resolve(url)

      } else {
        reject(new Error('Be patient please, we will fix it soon.'))
      }
      clearTimeout(timeout)
    }, 1000)
  })
}

export const getAllPhones = async () => {
  return getData(mockPhones)
  // return getData(phonesURL)
}

export const loadMorePhonesApi = async ({ offset }) => {
  return getData(mockPhones)
  // return getData(`${phonesURL}/${offset}`)
}

export const fetchPhoneByIdApi = async id => {
  const phones = await getData(mockPhones)
  // const phones = await getData(phonesURL)
  // const phone = phones.find(phone => phone.id === id)
  const phone = R.find(R.propEq('id', id), phones)
  return phone
}

export const fetchCategoriesApi = async () => {
  return new Promise((resolve, reject) => {
    resolve(mockCategories)
  })
}